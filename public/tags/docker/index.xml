<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Br-blog</title>
    <link>/tags/docker/</link>
    <description>Recent content in Docker on Br-blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Aug 2020 00:03:01 +0900</lastBuildDate>
    
	<atom:link href="/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dockerfile, docker-composeの設定について</title>
      <link>/post/docker/</link>
      <pubDate>Sun, 23 Aug 2020 00:03:01 +0900</pubDate>
      
      <guid>/post/docker/</guid>
      <description>Dockerfile, docker-composeの設定方法 Dockerfileには通常一つのコンテンツに関するものだけを記述する
例) pythonと同時にpipでpackageもインストールする場合
Dockerfile
FROMpython:latestCOPY requirements.txt requirements.txtRUN pip install --upgrade pip setuptools \  &amp;amp;&amp;amp; pip install -r requirements.txt&amp;ldquo;FROM&amp;quot;でベースとなるイメージをDockerHubから取得。セキュリティの観点からなるべくOfficial imageを取得するべき。
&amp;ldquo;COPY&amp;quot;はhost(自分が実際に利用しているPC)のrequirements.txtをDocker内のrequirements.txtにコピーしている
&amp;ldquo;RUN&amp;quot;はdockerが立ち上がる際に実行されるコマンド群を記述する。中間イメージをなるべく作らない(重い処理をさせない)ために&amp;quot;RUN&amp;quot;は&amp;amp;&amp;amp;を利用してできるだけ一度で済ませる
requirements.txt
matplotlib==3.3.1 mysql-connector 上の例ではdockerfileでpythonをインストールしている。 その際にpipを利用してモジュールをインストールしているが、別ファイルのrequirements.txtにモジュールとversionを指定しておく。-rオプションを使うことでrequirements.txtに書かれたモジュールをまとめてインストールすることができる。ここでモジュールのversionは指定しなくても良い。
次にdocker-compose.ymlについて説明する</description>
    </item>
    
  </channel>
</rss>